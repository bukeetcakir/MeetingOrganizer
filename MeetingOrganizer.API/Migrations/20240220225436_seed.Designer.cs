// <auto-generated />
using System;
using MeetingOrganizer.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MeetingOrganizer.API.Migrations
{
    [DbContext(typeof(MeetingsContext))]
    [Migration("20240220225436_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MeetingOrganizer.API.Data.Meeting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Participants")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Subject")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Meetings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7710),
                            EndTime = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7710),
                            Participants = "A,B,C",
                            StartTime = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7710),
                            Subject = "Interview"
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7720),
                            EndTime = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7720),
                            Participants = "A,D,C",
                            StartTime = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7720),
                            Subject = "Interview1"
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7720),
                            EndTime = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7720),
                            Participants = "A,D,E",
                            StartTime = new DateTime(2024, 2, 20, 22, 54, 36, 297, DateTimeKind.Utc).AddTicks(7720),
                            Subject = "Interview2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
